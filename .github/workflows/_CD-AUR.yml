name: 🚀 Publish AUR package

on:
  workflow_call:
    inputs:
      packages:
        description: Name of the package
        required: true
        type: string
    secrets:
      AUR_SSH_PRIVATE_KEY:
        description: Private key for the AUR account
        required: true
      KNOWN_HOSTS:
        description: Known hosts file
        required: true

  workflow_dispatch:
    inputs:
      packages:
        description: Name of the package
        required: true
        type: choice
        options:
          - "['oh-my-posh-bin']"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate matrix
        id: gen-matrix
        run: echo "::set-output name=packages::$(find ./packages/ -type f -name '*PKGBUILD' | sed -r 's|/[^/]+$||' | sort | uniq | cut -f3 -d'/' | jq -R | jq -cs)"
    outputs:
      packages: ${{ steps.gen-matrix.outputs.packages }}

  aur:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        pkgname: ${{ fromJson(needs.generate-matrix.outputs.packages) }}

    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔧 Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Get old version
        id: old-ver
        run: |
          source packages/${{ matrix.pkgname }}/PKGBUILD
          echo "$pkgver"
          echo "::set-output name=old-ver::$pkgver"

      - name: Validate package
        uses: hapakaien/archlinux-package-action@main
        with:
          path: packages/${{ matrix.pkgname }}
          aur: true

      # - name: 🛠️ Check PKGBUILD
      #   id: build-test
      #   uses: ouuan/pkgbuild-action@master
      #   with:
      #     path: ./packages/${{ matrix.pkgname }}

      - name: Show status
        run: |
          git status

      # - name: Handle epoch
      #   id: epoch
      #   run: |
      #     oldname="${{ steps.build-test.outputs.pkgfile }}"
      #     newname="$(echo "$oldname" | sed -e 's/[^A-Za-z0-9._-]/_/g')"
      #     if [[ "$oldname" != "$newname" ]]; then
      #       mv "$oldname" "$newname"
      #     fi
      #     echo "::set-output name=pkgfile::$newname"

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ matrix.pkgname }}-${{ github.run_id }}
      #     path: ${{ steps.epoch.outputs.pkgfile }}

      - name: Get new version
        id: new-ver
        run: |
          source packages/${{ matrix.pkgname }}/PKGBUILD
          echo "$pkgver"
          echo "::set-output name=new-ver::$pkgver"

      # - name: 🔃 Clone AUR and update
      #   run: |
      #     message="Update ${{ matrix.pkgname }}"
      #     git clone ssh://aur@aur.archlinux.org/${{ matrix.pkgname }}.git ../aur
      #     shopt -s dotglob
      #     shopt -s extglob
      #     rm ../aur/!(.git|.|..) || true
      #     cp -r packages/${{ matrix.pkgname }}/*  ../aur
      #     cd ../aur
      #     git config user.name "GitHub Action"
      #     git config user.email "action@github.com"
      #     git add -A
      #     escape() {
      #       local content="$1"
      #       content="${content//'%'/'%25'}"
      #       content="${content//$'\n'/'%0A'}"
      #       content="${content//$'\r'/'%0D'}"
      #       echo "$content"
      #     }
      #     git diff-index @ --exit-code --quiet || ( git commit -m "Update from GitHub Actions: $message

      #     https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" && echo "::warning::Pushed to AUR:%0A$(escape "$message")" )
      #     git push

  # publish-aur:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       pkgname: ${{ fromJSON(format('{0}{1}', github.event.inputs.packages, inputs.packages)) }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 📚 Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: 🔧 Run update script
  #       id: updatePKGs
  #       run: |
  #         bash update-pkg.sh ${{ matrix.pkgname }}
  #     - name: 🔃 Get package version
  #       run: |
  #         source packages/${{ matrix.pkgname }}/PKGBUILD
  #         echo "PKGVER=$pkgver" >> $GITHUB_ENV
  #     - name: 🚀 Publish AUR package
  #       uses: KSXGitHub/github-actions-deploy-aur@master
  #       with:
  #         pkgname: ${{ matrix.pkgname }}
  #         pkgbuild: ./packages/${{ matrix.pkgname }}/PKGBUILD
  #         commit_username: ${{ secrets.AUR_USERNAME }}
  #         commit_email: ${{ secrets.AUR_EMAIL }}
  #         ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
  #         commit_message: Update ${{ matrix.pkgname }} package to ${{ env.PKGVER }}
